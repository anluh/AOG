/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */*,::after,::before{box-sizing:border-box}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}a{background-color:transparent}img{max-width:100%;border-style:none}a>img{display:block}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:100%;line-height:1.15}button,input{overflow:visible}button,select{text-transform:none}select::-ms-expand{display:none}input::-ms-clear{display:none}button,[type='button'],[type='reset'],[type='submit']{-webkit-appearance:button;padding:0}button::-moz-focus-inner,[type='button']::-moz-focus-inner,[type='reset']::-moz-focus-inner,[type='submit']::-moz-focus-inner{border-style:none}legend{display:table;max-width:100%;padding:0;box-sizing:border-box;white-space:normal;color:inherit}textarea{overflow:auto}[type='checkbox'],[type='radio']{padding:0;box-sizing:border-box}[type='search']{outline-offset:-2px;-webkit-appearance:textfield}[type='search']::-webkit-search-decoration{-webkit-appearance:none}[hidden]{display:none}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font:inherit;font-size:100%;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ol,ul{list-style:none}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:'Formular';src:url("../fonts/Formular-Medium.woff2") format("woff2"),url("../fonts/Formular-Medium.woff") format("woff"),url("../fonts/Formular-Medium.ttf") format("truetype");font-weight:500;font-style:normal}@font-face{font-family:'Formular';src:url("Formular-Black.woff2") format("woff2"),url("Formular-Black.woff") format("woff"),url("Formular-Black.ttf") format("truetype");font-weight:900;font-style:normal}@font-face{font-family:'Formular';src:url("Formular-Italic.woff2") format("woff2"),url("Formular-Italic.woff") format("woff"),url("Formular-Italic.ttf") format("truetype");font-weight:normal;font-style:italic}@font-face{font-family:'Formular';src:url("Formular.woff2") format("woff2"),url("Formular.woff") format("woff"),url("Formular.ttf") format("truetype");font-weight:normal;font-style:normal}@font-face{font-family:'Formular';src:url("Formular-Light.woff2") format("woff2"),url("Formular-Light.woff") format("woff"),url("Formular-Light.ttf") format("truetype");font-weight:300;font-style:normal}@font-face{font-family:'Formular';src:url("Formular-MediumItalic.woff2") format("woff2"),url("Formular-MediumItalic.woff") format("woff"),url("Formular-MediumItalic.ttf") format("truetype");font-weight:500;font-style:italic}@font-face{font-family:'Formular';src:url("Formular-Bold.woff2") format("woff2"),url("Formular-Bold.woff") format("woff"),url("Formular-Bold.ttf") format("truetype");font-weight:bold;font-style:normal}.header{background:rgba(12,84,64,0.5);min-height:50px;padding:10px 0;position:fixed;top:0;width:100%;z-index:20}.header_logo{max-height:50px}.header_social{display:flex;justify-content:flex-end}.navigation{height:100%;display:flex;align-items:center;justify-content:space-around}.navigation_link{text-transform:uppercase;text-decoration:none;color:white;font-weight:500;font-size:15px;position:relative;padding:0 5px}.navigation_link:after{content:'';position:absolute;left:0;bottom:-8px;width:100%;height:2px;height:2px;background:rgba(0,130,92,0.5);opacity:0;transform:translateY(5px);transition:transform 0.3s, opacity 0.3s}.navigation_link:hover:after{opacity:1;transform:translateY(0px)}.social{display:flex;align-items:center}.social_item{display:inline-block;margin-right:10px}.social_item:last-child{margin-right:0}.social_link{width:32px;height:32px;border-radius:50%;background:#fff;display:block;line-height:32px;transition:all 0.3s}.social_link:hover{background:rgba(12,84,64,0.5)}.social_link:hover .social_icon{fill:#FEFEFE}.social_icon{max-width:100%;max-height:100%;padding:9px;fill:#073025;transition:all 0.3s}.video{position:relative}.video_player{object-fit:cover;max-width:100%;max-height:100%}@media screen and (min-width: 768px){.map{height:500px;position:relative}}.map_frame{height:100%;width:100%}@media screen and (min-width: 768px){.map_frame{position:absolute}}.map_info{color:#fff;padding:20px;text-transform:uppercase}@media screen and (min-width: 768px){.map_info{z-index:2;position:absolute;top:30%;right:15%;width:300px;height:220px;background:rgba(12,84,64,0.7)}}.map_address{margin:15px 0}.map_contact-item{line-height:1.5;display:inline-block}.map_contact-item--link{text-transform:none;color:inherit}.map_contact-item--link:hover{text-decoration:none}.map_title{font-size:20px;letter-spacing:1px;text-transform:uppercase}.about{padding-top:40px;padding-bottom:40px;line-height:1.5em}.about_title{text-transform:uppercase;font-size:22px;margin-bottom:10px}.about_image{width:100%}body{background:#FEFEFE;font-family:'Formular', 'Arial', sans-serif;font-weight:500;font-style:normal;font-size:14px}.container-fluid{max-width:1440px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
