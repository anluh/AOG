/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */*,::after,::before{box-sizing:border-box}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}a{background-color:transparent}img{max-width:100%;border-style:none}a>img{display:block}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:100%;line-height:1.15}button,input{overflow:visible}button,select{text-transform:none}select::-ms-expand{display:none}input::-ms-clear{display:none}button,[type='button'],[type='reset'],[type='submit']{-webkit-appearance:button;padding:0}button::-moz-focus-inner,[type='button']::-moz-focus-inner,[type='reset']::-moz-focus-inner,[type='submit']::-moz-focus-inner{border-style:none}legend{display:table;max-width:100%;padding:0;box-sizing:border-box;white-space:normal;color:inherit}textarea{overflow:auto}[type='checkbox'],[type='radio']{padding:0;box-sizing:border-box}[type='search']{outline-offset:-2px;-webkit-appearance:textfield}[type='search']::-webkit-search-decoration{-webkit-appearance:none}[hidden]{display:none}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font:inherit;font-size:100%;vertical-align:baseline}p{margin:.5em 0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ol,ul{list-style:none}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:'Formular';src:url("../fonts/Formular-Medium.woff2") format("woff2"),url("../fonts/Formular-Medium.woff") format("woff"),url("../fonts/Formular-Medium.ttf") format("truetype");font-weight:500;font-style:normal}@font-face{font-family:'Formular';src:url("../fonts/Formular-Black.woff2") format("woff2"),url("../fonts/Formular-Black.woff") format("woff"),url("../fonts/Formular-Black.ttf") format("truetype");font-weight:900;font-style:normal}@font-face{font-family:'Formular';src:url("../fonts/Formular-Italic.woff2") format("woff2"),url("../fonts/Formular-Italic.woff") format("woff"),url("../fonts/Formular-Italic.ttf") format("truetype");font-weight:normal;font-style:italic}@font-face{font-family:'Formular';src:url("../fonts/Formular.woff2") format("woff2"),url("../fonts/Formular.woff") format("woff"),url("../fonts/Formular.ttf") format("truetype");font-weight:normal;font-style:normal}@font-face{font-family:'Formular';src:url("../fonts/Formular-Light.woff2") format("woff2"),url("../fonts/Formular-Light.woff") format("woff"),url("../fonts/Formular-Light.ttf") format("truetype");font-weight:300;font-style:normal}@font-face{font-family:'Formular';src:url("../fonts/Formular-MediumItalic.woff2") format("woff2"),url("../fonts/Formular-MediumItalic.woff") format("woff"),url("../fonts/Formular-MediumItalic.ttf") format("truetype");font-weight:500;font-style:italic}@font-face{font-family:'Formular';src:url("../fonts/Formular-Bold.woff2") format("woff2"),url("../fonts/Formular-Bold.woff") format("woff"),url("../fonts/Formular-Bold.ttf") format("truetype");font-weight:bold;font-style:normal}.header{background:rgba(12,84,64,0.9);min-height:50px;padding:10px 0;position:fixed;top:0;width:100%;z-index:20}@media screen and (max-width: 1023px){.header{height:64px}}.header_wrapper{align-items:center}.header_humburger-wrapper{display:flex;justify-content:flex-end}.header_logo{max-height:50px}@media screen and (max-width: 1023px){.header_logo{max-height:45px}}.header_social{display:flex;justify-content:flex-end}@media screen and (max-width: 1023px){.header_nav{background:rgba(12,84,64,0.5);min-height:calc(100vh - 50px);position:absolute;right:0;top:64px;visibility:hidden;transition:all 0.3s ease;transform:translateX(100%)}.header_nav--open{transform:translateX(0);visibility:visible}}.navigation{height:100%;display:flex;align-items:center;justify-content:space-around}@media screen and (max-width: 1023px){.navigation{flex-direction:column;align-items:flex-start}}.navigation_link{text-transform:uppercase;text-decoration:none;color:white;font-weight:500;font-size:15px;position:relative;padding:0 5px}@media screen and (max-width: 1023px){.navigation_link{font-size:20px;display:block;padding:10px 15px}}.navigation_link:after{content:'';position:absolute;left:0;bottom:-8px;width:100%;height:2px;height:2px;background:rgba(0,130,92,0.5);opacity:0;transform:translateY(5px);transition:transform 0.3s, opacity 0.3s}.navigation_link:hover:after{opacity:1;transform:translateY(0px)}.menu-humburger{width:35px;height:24px;position:relative;transform:rotate(0deg);transition:.5s ease-in-out;cursor:pointer}.menu-humburger_line{display:block;position:absolute;height:4px;width:100%;background:#FEFEFE;border-radius:5px;opacity:1;left:0;transform:rotate(0deg);transition:.25s ease-in-out}.menu-humburger_line:nth-child(1){top:0px}.menu-humburger_line:nth-child(2),.menu-humburger_line:nth-child(3){top:9px}.menu-humburger_line:nth-child(4){top:18px}.menu-humburger--open .menu-humburger_line:nth-child(1){top:18px;width:0%;left:50%}.menu-humburger--open .menu-humburger_line:nth-child(2){transform:rotate(45deg)}.menu-humburger--open .menu-humburger_line:nth-child(3){transform:rotate(-45deg)}.menu-humburger--open .menu-humburger_line:nth-child(4){top:18px;width:0%;left:50%}.video{position:relative}@media screen and (max-width: 1023px){.video{margin-top:64px}}.video_player{object-fit:cover;max-width:100%;max-height:100%;width:100%}@media screen and (min-width: 768px){.map{height:500px;position:relative}}.map_frame{height:100%;width:100%;min-height:300px}@media screen and (min-width: 768px){.map_frame{position:absolute}}.map_info{color:#fff;padding:20px;text-transform:uppercase;background:rgba(12,84,64,0.5)}@media screen and (min-width: 768px){.map_info{z-index:2;position:absolute;top:30%;right:15%;width:300px;height:220px;background:rgba(12,84,64,0.7)}}.map_address{margin:15px 0}.map_contact-item{line-height:1.5;display:inline-block}.map_contact-item--link{text-transform:none;color:inherit}.map_contact-item--link:hover{text-decoration:none}.map_title{font-size:20px;letter-spacing:1px;text-transform:uppercase}.leaders{padding:60px 0}@media screen and (max-width: 1023px){.leaders{padding:30px 0}}.leaders_item{text-align:center}@media screen and (max-width: 1023px){.leaders_item{padding:10px 0}}.leaders_link{position:absolute;display:block;height:100%;width:50%;top:0;text-decoration:none;color:#2B2A28}.leaders_link span{display:block;position:absolute;text-align:left;font-size:16px}.leaders_link span:hover{text-decoration:underline}.leaders_link--wife{right:0}.leaders_link--wife span{max-width:95px}.leaders_link--husband{left:0}.leaders_link--husband span{left:-45%;top:0}@media screen and (max-width: 1023px){.leaders_link--husband span{left:-68%}}.leaders_item:nth-child(1) .leaders_link--wife span{top:30%;right:-68%}@media screen and (max-width: 1023px){.leaders_item:nth-child(1) .leaders_link--wife span{right:-85%}}.leaders_item:nth-child(2) .leaders_link--wife span{top:14%;right:-47%}@media screen and (max-width: 1023px){.leaders_item:nth-child(2) .leaders_link--wife span{top:11%;right:-71%}}.leaders_item:nth-child(3) .leaders_link--wife{left:0;width:44%}.leaders_item:nth-child(3) .leaders_link--wife span{left:-35%;top:15%}@media screen and (max-width: 1023px){.leaders_item:nth-child(3) .leaders_link--wife span{left:-68%}}.leaders_item:nth-child(3) .leaders_link--husband{left:auto;right:0;width:56%}.leaders_item:nth-child(3) .leaders_link--husband span{left:auto;right:-13%;top:-25px}@media screen and (max-width: 1023px){.leaders_item:nth-child(3) .leaders_link--husband span{right:-31%;top:-22px}}.leaders_name{text-transform:uppercase;font-weight:600;margin-bottom:10px;color:#0C5440;font-size:20px}@media screen and (max-width: 1023px){.leaders_name{font-size:18px}}.leaders_text{text-transform:uppercase}.leaders_photos{position:relative;margin-top:10px;display:inline-block;cursor:pointer}.leaders_photos:hover>.leaders_img-hover{display:block;height:100%}.leaders_img{max-width:100%;max-height:500px;margin:0 auto}@media screen and (max-width: 1023px){.leaders_img{max-height:400px}}.leaders_img-hover{position:absolute;top:0;display:none;left:50%;transform:translateX(-50%)}.building{position:relative;background:#ff7faf;background:linear-gradient(90deg, #ff7faf 0%, #ff7faf 35%, white 100%)}@media screen and (min-width: 1024px){.building{height:400px}}.building .container-fluid,.building .row{height:100%}.building_image{position:absolute;top:0;left:0}@media screen and (min-width: 1024px){.building_image{height:100%}}@media screen and (max-width: 1023px){.building_image{position:static;margin-bottom:15px;width:100%;display:none}}.building_content{display:flex;align-items:center;color:#fff;padding:6% 0;height:100%}.building_title{text-transform:uppercase;font-size:58px;font-weight:bold;max-width:350px;line-height:1.3}@media screen and (max-width: 1023px){.building_title{font-size:48px}}.building_offering{align-self:flex-end;margin-left:10%;text-shadow:0px 0px 1px rgba(0,0,0,0.4)}.building_offering-title{font-size:22px;font-weight:bold;text-transform:uppercase}.building_offering-card{font-size:22px;font-weight:bold}.building_offering-bank{font-size:16px;font-weight:300}.about{padding-top:40px;padding-bottom:40px;line-height:1.5em;position:relative;overflow:hidden}@media screen and (max-width: 1023px){.about{padding:30px 0}}.about_title{text-align:center}@media screen and (max-width: 1023px){.about_title{margin-bottom:20px}}.about_image{position:absolute;top:40px;left:0;width:calc(50% - 1rem)}@media screen and (max-width: 1023px){.about_image{position:static;margin-bottom:15px;width:100%}}.schedule{padding:60px 0;color:#FEFEFE;background:black;background:url("../img/schedule-background-1.jpg") no-repeat;background-size:cover}@media screen and (max-width: 1023px){.schedule{padding:30px 0}}.schedule .title{text-align:center}.schedule_list{padding-bottom:20px;padding-top:20px}@media screen and (min-width: 1024px){.schedule_list{width:50%;transform:translateX(25%)}}@media screen and (max-width: 1023px){.schedule_list{width:50%;padding-left:1rem;padding-right:1rem}}@media screen and (max-width: 767px){.schedule_list{width:100%}}.schedule_item{font-size:20px;line-height:1.5em;display:flex;text-shadow:1px 1px 2px #2B2A28;text-transform:uppercase;font-weight:200}@media screen and (max-width: 1023px){.schedule_item{font-size:16px}}.schedule_item--title{font-size:22px;margin-bottom:5px;font-weight:500;margin-top:25px}.schedule_time{margin-right:20px;font-weight:500}@media screen and (max-width: 1023px){.schedule_time{margin-right:15px}}.social{display:flex;align-items:center}.social_item{display:inline-block;margin-right:10px}.social_item:last-child{margin-right:0}.social_link{width:32px;height:32px;border-radius:50%;background:#fff;display:block;line-height:32px;transition:all 0.3s}.social_link:hover{background:rgba(12,84,64,0.5)}.social_link:hover .social_icon{fill:#FEFEFE}.social_link--green{background:#073025}.social_link--green .social_icon{fill:#FEFEFE}.social_icon{max-width:100%;max-height:100%;padding:9px;fill:#073025;transition:all 0.3s}.footer{background:rgba(12,84,64,0.5);padding:15px 0 20px;display:flex;justify-content:center;align-items:center;color:#FEFEFE;flex-direction:column}body{background:#FEFEFE;font-family:'Formular', 'Arial', sans-serif;font-weight:500;font-style:normal;font-size:14px}.container-fluid{max-width:1440px}@media screen and (max-width: 767px){.container-fluid{padding-left:1rem !important;padding-right:1rem !important}}.title{text-transform:uppercase;font-size:22px;margin-bottom:10px}@media screen and (min-width: 1024px){.desktop-hide{display:none}}@media screen and (max-width: 1023px){.mobile-hide{display:none}}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
